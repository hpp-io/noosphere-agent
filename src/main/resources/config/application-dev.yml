# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: DEBUG
    tech.jhipster: DEBUG
    org.hibernate.SQL: DEBUG
    io.hpp.noosphere.agent: DEBUG

spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://localhost:5432/noosphereAgent
    username: noosphereAgent
    password:
    hikari:
      poolName: Hikari
      auto-commit: false
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    drop-first: true
    contexts: dev, faker
  mail:
    host: localhost
    port: 25
    username:
    password:
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false

server:
  port: ${application.server.port:8080}
  # make sure requests the proxy uri instead of the server one
  forward-headers-strategy: native

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  cache: # Cache configuration
    hazelcast: # Hazelcast distributed cache
      time-to-live-seconds: 3600
      backup-count: 1
  # CORS is only enabled by default with the "dev" profile
  cors:
    # Allow Ionic for JHipster by default (* no longer allowed in Spring Boot 2.4+)
    allowed-origins: 'http://localhost:8100,https://localhost:8100,http://localhost:9000,https://localhost:9000,http://localhost:9060,https://localhost:9060'
    # Enable CORS when running in GitHub Codespaces
    allowed-origin-patterns: 'https://*.githubpreview.dev'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: NjQ2ZTI3ODk0ZGNiMDM0MGY0YWE2YTY0YzBhZTkwMzIxYTUzOTMzYTAwMGNlYzk0NGE5ZjgwOGUxMjMyNDcyNWZmN2YwMDk1Mjk0ZGI5NzkxY2JmZWI2ZGQ2YzJiYWUwMGJhOTJlZDRkYTMxNTFiZjE1NTMxMGI0ZDUwODQ3ZmI=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific JHipster mail property, for standard properties see MailProperties
    base-url: http://127.0.0.1:8080
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      ring-buffer-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

application:
  noosphere:
    # 개발 환경 특화 설정
    startupWait: 2.0 # 개발 환경에서는 빠른 시작

    # 개발 환경 서버 설정
    server:
      port: 8080
      rateLimit:
        numRequests: 1000 # 개발 환경에서는 관대한 rate limit
        period: 60

    # 개발 환경 블록체인 설정
    chain:
      registryAddress: '0x1234567890123456789012345678901234567890'
      wallet:
        privateKey: '${WALLET_PRIVATE_KEY:dev-private-key}'
        paymentAddress: '0xabcdefabcdefabcdefabcdefabcdefabcdefabcd'

    # 개발 환경 Docker 설정
    docker:
      username: '${DOCKER_USERNAME:}'
      password: '${DOCKER_PASSWORD:}'
